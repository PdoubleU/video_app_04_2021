{"version":3,"sources":["components/organisms/Navigation.js","components/organisms/Mainfooter.js","templates/MainTemplate.js","components/atoms/Button.js","hooks/useFetchData.js","constans.js","helpers/inputFilter.js","api/youtubeFetchRequest.js","api/vimeoFetchRequest.js","helpers/personalizeDataObject.js","helpers/unifyData.js","providers/MoviesProvider.js","components/molecules/CardButtonsPanel.js","components/atoms/Image.js","templates/ModalTemplate.js","hooks/useModalTemplate.js","style/fontawesome.js","components/molecules/CardModel.js","components/molecules/ControlButtonsPanel.js","components/molecules/ListModel.js","components/molecules/Pagination.js","components/organisms/MoviesList.js","views/ListView.js","components/atoms/Input.js","components/atoms/Label.js","components/molecules/AddMovieForm.js","views/MainView.js","views/Root.js","index.js"],"names":["Navi","useState","isOpen","setIsOpen","toggle","className","Navbar","light","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Mainfooter","MainTemplate","children","ButtonModel","props","handleClick","tagName","route","id","type","value","target","faIcon","Button","outline","icon","size","useFetchData","data","setData","isLoading","setIsLoading","isError","setIsError","apiProvider","setApiProvider","resetErrorAlert","fetchData","url","options","provider","a","fetch","response","json","result","console","log","DEMO_LIST","REG_EXP","youtube_input","RegExp","vimeo_input","youtube_id","vimeo_id","inputFilter","input","youtubeProvider","vimeoProvider","test","URL","params","key","process","Object","keys","forEach","searchParams","append","youtubeFetchReq","match","method","credentials","headers","Authorization","vimeoFetchReq","propTypes","PropTypes","string","isRequired","personalizeDataObject","item","Date","toLocaleDateString","split","month","day","year","getRandomInt","addDate","parseInt","isLiked","min","max","Math","ceil","floor","random","object","unifyData","obj","snippet","title","thumbnails","standard","statistics","viewCount","likeCount","uri","name","metadata","connections","likes","total","pictures","sizes","link","iframe","items","MoviesContext","React","createContext","getStoredMovies","getFilteredMovies","deleteMovie","getMovieData","toggleLike","emptyList","loadDemo","sortByDate","MoviesProvider","JSON","parse","window","localStorage","getItem","storedMovies","setStoredMovies","useEffect","addMovie","saveInStorage","setItem","stringify","e","preventDefault","some","elem","Provider","filter","parentElement","tmpList","index","findIndex","splice","bool","sort","b","CardButtonsPanel","handleModal","likeIconMode","context","useContext","Container","Image","alt","CardImg","top","width","src","style","cursor","ModalTemplate","toggleVisibility","iframeUrl","modalNode","document","getElementById","ReactDOM","createPortal","Modal","min-height","modalTransition","timeout","backdropTransition","ModalHeader","ModalBody","height","allow","allowFullScreen","useModalTemplate","initialState","library","add","fas","far","CardModel","date","views","liked","Card","class","CardBody","CardTitle","CardText","ControlButtonsPanel","handleView","handleFiltering","btnValue","btnFilterValue","role","aria-label","MovieListElement","Media","left","href","body","heading","ListPagination","itemsPerPage","totalItems","pageNumbers","i","push","Pagination","PaginationItem","PaginationLink","first","map","num","length","last","buttonsNames","MovieList","tiles","list","normal","viewTiles","setViewTiles","setBtnValue","setBtnFilterValue","filteredList","setFilteredList","currPage","setCurrPage","indexOfLastItem","indexOfFirstItem","currItems","slice","paginationComponent","pageNumber","fluid","Row","xs","md","lg","xl","movieData","Col","List","ListModel","ListOfMovies","FormInput","placeholder","onchangeHandler","Input","onChange","FormLabel","labelValue","Label","htmlFor","hidden","AddForm","setInput","Spinner","color","Form","inline","onSubmit","FormGroup","labelName","MainView","AddMovieForm","App","path","exact","render"],"mappings":"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","file":"static/js/main.5307ceb2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\n\nfunction Navi() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <header className=\"d-block\">\n      <Navbar className=\"fixed-top bg-dark \" light expand=\"md\">\n        <NavbarBrand className=\"text-light\" tag={Link} to=\"/\">\n          Video App\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink\n                className=\"text-light\"\n                tag={Link}\n                to=\"/\"\n                onClick={toggle}\n              >\n                Main\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className=\"text-light\"\n                tag={Link}\n                to=\"/movie-list\"\n                onClick={toggle}\n              >\n                List\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Navi;\n","function Mainfooter() {\n  return (\n    <footer className=\"footer position-absolute w-100 bg-light \">\n      <div className=\"container px-5 py-3\">\n        <p className=\"text-muted text-center m-0\">\n          App author: Piotr Witasik/PdoubleU &copy; 2021\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Mainfooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Navi from '../components/organisms/Navigation.js';\nimport Mainfooter from '../components/organisms/Mainfooter.js';\nimport { Container } from 'reactstrap';\n\nfunction MainTemplate({ children }) {\n  return (\n    <>\n      <Navi />\n      {children}\n      <Mainfooter />\n    </>\n  );\n}\n\nMainTemplate.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default MainTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction ButtonModel({ ...props }) {\n  const {\n    handleClick,\n    tagName,\n    route,\n    id = '',\n    type = 'button',\n    value = '',\n    target = '',\n    faIcon = '',\n  } = props;\n  return (\n    <Button\n      outline\n      onClick={handleClick}\n      tag={tagName}\n      to={route}\n      id={id}\n      type={type}\n      target={target}\n      icon={faIcon}\n    >\n      {value}\n      {faIcon ? <FontAwesomeIcon icon={faIcon} size=\"sm\" /> : null}\n    </Button>\n  );\n}\n\nButtonModel.propTypes = {\n  handleClick: PropTypes.func,\n  tagName: PropTypes.object,\n  route: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  value: PropTypes.string,\n  target: PropTypes.string,\n};\n\nexport default ButtonModel;\n","import { useState } from 'react';\n\nfunction useFetchData() {\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [apiProvider, setApiProvider] = useState('');\n\n  const resetErrorAlert = () => {\n    setIsError(false);\n  };\n\n  const fetchData = async (url, options, provider) => {\n    setIsLoading(true);\n    setApiProvider(provider);\n    let response, result;\n    try {\n      response = await fetch(url, { ...options });\n      result = await response.json();\n    } catch (err) {\n      setIsError(true);\n      console.log(err);\n    }\n    setData(result);\n    setIsLoading(false);\n  };\n\n  return [\n    { data, apiProvider, isLoading, isError, resetErrorAlert, fetchData },\n  ];\n}\n\nexport default useFetchData;\n","export const DEMO_LIST = [\n  'F-yeKCV2Mrk',\n  'TUfyUUauuoY',\n  '3E1vOhBcsdg',\n  'FJe99BjV8bM',\n  'VRzbQYmgJ2Q',\n  'KTT7i3SKpMQ',\n  'vyKj-WsStFc',\n  'facmiPgeMNM',\n  'hd0fXhDkH84',\n  'Zfm_y0OJmN4',\n  'luW--mtTPtA',\n  '0_0imzGKNjA',\n  'tJJiGL8orfY',\n  'n-kg9zhq-xE',\n  'EMAlaNCMSgE',\n  'JbBKOJH4dh0',\n  'P8vGytRX7S0',\n  'ErsxQkch7ec',\n  'ugHGotF7tR0',\n  'oIMaTKOZG-8',\n  '_308KNAuFkg',\n  'spjp49HFd84',\n  'iPMiD3Wu74Q',\n  'r874E6s4cQ',\n  '4DKkueqcKmQ',\n  'h3RG5dztrXM',\n  '535769506',\n  '220555992',\n  '226441556',\n  '248465461',\n  '87452303',\n  '99144904',\n  '241916506',\n  '1522709',\n  '43974197',\n  '71715434',\n  '99227117',\n  '139592600',\n  '476216027',\n  '137623605',\n  '287060952',\n  '188653769',\n  '259132930',\n  '11768506',\n  '301188466',\n  '111481788',\n  '44026236',\n  '388213806',\n  '230586645',\n  '233459603',\n  '211452489',\n];\n\nexport const REG_EXP = {\n  youtube_input: new RegExp(\n    `^https://www.youtube.com/watch\\\\?v=\\\\S{11}$|^https://youtu.be/\\\\S{11}$|^\\\\S{11}$`\n  ),\n  vimeo_input: new RegExp(`^https://vimeo.com/\\\\d{7,9}$|^\\\\d{7,9}$`),\n  youtube_id: new RegExp(`\\\\S{11}$`),\n  vimeo_id: new RegExp(`\\\\d{7,9}$`),\n};\n","import PropTypes from 'prop-types';\nimport { REG_EXP } from '../constans';\nimport { vimeoFetchReq } from '../api/vimeoFetchRequest';\nimport { youtubeFetchReq } from '../api/youtubeFetchRequest';\n\nexport const inputFilter = (input) => {\n  let youtubeProvider = false,\n    vimeoProvider = false,\n    id = '',\n    provider = '',\n    [url, options] = ['', {}];\n\n  youtubeProvider = REG_EXP.youtube_input.test(input);\n  vimeoProvider = REG_EXP.vimeo_input.test(input);\n  // check if the input is incorrect in both cases and then return with empty strings:\n  if (!vimeoProvider && !youtubeProvider) return [null, null, null];\n  if (youtubeProvider) {\n    id = input.match(REG_EXP.youtube_id);\n    provider = 'youtube';\n    [url, options] = youtubeFetchReq(id);\n  }\n  if (vimeoProvider) {\n    id = input.match(REG_EXP.vimeo_id);\n    provider = 'vimeo';\n    [url, options] = vimeoFetchReq(id);\n  }\n  return [url, options, id, provider];\n};\n\ninputFilter.propTypes = {\n  input: PropTypes.string.isRequired,\n};\n","export const youtubeFetchReq = (id) => {\n  let key = process.env.REACT_APP_YOUTUBE_API_KEY,\n    apiAddress =\n      'https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics',\n    url = new URL(apiAddress),\n    params = {\n      id,\n      key,\n    };\n  Object.keys(params).forEach((key) =>\n    url.searchParams.append(key, params[key])\n  );\n  let options = {};\n  return [url, options];\n};\n","export const vimeoFetchReq = (id) => {\n  let key = process.env.REACT_APP_VIMEO_API_KEY,\n    url = `https://api.vimeo.com/videos/${id}`;\n  let options = {\n    method: 'GET',\n    credentials: 'same-origin',\n    headers: {\n      Authorization: `bearer ${key}`,\n    },\n  };\n  return [url, options];\n};\n","import PropTypes from 'prop-types';\n\nexport const personalizeDataObject = (item) => {\n  if (!item) return;\n  let months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  let [month, day, year] = new Date().toLocaleDateString('en-US').split('/');\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n  day = getRandomInt(1, 30);\n  month = getRandomInt(0, 11);\n  item.addDate = day + ' ' + months[parseInt(month) + 1] + ' ' + year;\n  item.isLiked = false;\n  return item;\n};\n\npersonalizeDataObject.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { REG_EXP } from '../constans';\nimport { personalizeDataObject } from './personalizeDataObject';\n\nexport const unifyData = (data, provider) => {\n  if (!data) return;\n  let obj = {\n    id: '',\n    snippet: {\n      title: '',\n      thumbnails: { standard: { url: '' } },\n    },\n    statistics: { viewCount: '0', likeCount: '0' },\n  };\n  if (provider === 'vimeo') {\n    obj.id = data.uri.match(REG_EXP.vimeo_id)[0];\n    obj.snippet.title = data.name;\n    obj.statistics.viewCount = data.metadata.connections.likes.total;\n    obj.statistics.likeCount = data.metadata.connections.likes.total;\n    obj.snippet.thumbnails.standard.url = data.pictures.sizes[3].link;\n    obj.iframe = `https://player.vimeo.com/video/${obj.id}?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=213205`;\n    return personalizeDataObject(obj);\n  }\n  obj.id = data.items[0].id;\n  obj.snippet.title = data.items[0].snippet.title;\n  obj.statistics.viewCount = data.items[0].statistics.viewCount;\n  obj.statistics.likeCount = data.items[0].statistics.likeCount;\n  obj.snippet.thumbnails.standard.url =\n    data.items[0].snippet.thumbnails.standard.url;\n  obj.iframe = `https://www.youtube.com/embed/${obj.id}`;\n  return personalizeDataObject(obj);\n};\n\nunifyData.propTypes = {\n  data: PropTypes.object.isRequired,\n  provider: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFetchData from '../hooks/useFetchData';\nimport { inputFilter } from '../helpers/inputFilter';\nimport { unifyData } from '../helpers/unifyData';\nimport { DEMO_LIST } from '../constans';\n\nexport const MoviesContext = React.createContext({\n  getStoredMovies: [],\n  getFilteredMovies: [],\n  deleteMovie: () => {},\n  getMovieData: () => {},\n  toggleLike: () => {},\n  emptyList: () => {},\n  loadDemo: () => {},\n  sortByDate: () => {},\n  isLoading: false,\n  isError: false,\n  resetErrorAlert: () => {},\n});\n\nexport const MoviesProvider = ({ children }) => {\n  const [storedMovies, setStoredMovies] = useState(\n    JSON.parse(window.localStorage.getItem('movies') || null)\n  );\n  const [\n    { data, apiProvider, isLoading, isError, resetErrorAlert, fetchData },\n  ] = useFetchData();\n\n  useEffect(() => {\n    addMovie(unifyData(data, apiProvider));\n  }, [data]);\n\n  useEffect(() => {\n    saveInStorage();\n  }, [storedMovies]);\n\n  const saveInStorage = () => {\n    window.localStorage.setItem('movies', JSON.stringify(storedMovies));\n  };\n\n  const addMovie = (data) => {\n    if (!data) return;\n    storedMovies\n      ? setStoredMovies([...storedMovies, data])\n      : setStoredMovies([data]);\n  };\n\n  const getMovieData = async (e, input) => {\n    if (e) e.preventDefault();\n    const [url, options, id, provider] = inputFilter(input);\n    // exit function in case of empty/bad id string:\n    if (!url && !options && !id) return;\n    // check if item with provided id exists in the memory and return if true (not duplicate items)\n    if (\n      storedMovies\n        ? storedMovies.some((item) => {\n            return item.id === id;\n          })\n        : null\n    )\n      return;\n    await fetchData(url, options, provider);\n  };\n\n  const getStoredMovies = () => {\n    if (!storedMovies) return null;\n    return storedMovies;\n  };\n\n  const getFilteredMovies = () => {\n    if (!storedMovies) return null;\n    let filteredData = storedMovies.filter((elem) => {\n      return elem.isLiked === true;\n    });\n    return filteredData;\n  };\n\n  const deleteMovie = (e) => {\n    e.preventDefault();\n    let id = e.target.parentElement.id;\n    let tmpList = JSON.parse(JSON.stringify(storedMovies));\n    let index = tmpList.findIndex((item) => {\n      return item.id === id;\n    });\n    tmpList.splice(index, 1);\n    setStoredMovies(tmpList);\n  };\n\n  const toggleLike = (e) => {\n    e.preventDefault();\n    let id = e.target.parentElement.id;\n    let tmpList = JSON.parse(JSON.stringify(storedMovies));\n    let index = tmpList.findIndex((item) => {\n      return item.id === id;\n    });\n    tmpList[index].isLiked = !tmpList[index].isLiked;\n    setStoredMovies(tmpList);\n  };\n\n  const emptyList = () => {\n    setStoredMovies(null);\n  };\n\n  const loadDemo = async () => {\n    for (const elem of DEMO_LIST) {\n      await getMovieData(null, elem);\n    }\n  };\n\n  const sortByDate = (bool) => {\n    let tmpList = JSON.parse(JSON.stringify(storedMovies));\n    //boolean value passed as parameter determine descending or ascending sort: false = descending / true = ascending:\n    if (!bool) {\n      tmpList.sort((a, b) => {\n        return new Date(b.addDate) - new Date(a.addDate);\n      });\n      return setStoredMovies(tmpList);\n    }\n    tmpList.sort((a, b) => {\n      return new Date(a.addDate) - new Date(b.addDate);\n    });\n    return setStoredMovies(tmpList);\n  };\n\n  return (\n    <MoviesContext.Provider\n      value={{\n        getStoredMovies,\n        getFilteredMovies,\n        deleteMovie,\n        getMovieData,\n        toggleLike,\n        emptyList,\n        loadDemo,\n        sortByDate,\n        isLoading,\n        isError,\n        resetErrorAlert,\n      }}\n    >\n      {children}\n    </MoviesContext.Provider>\n  );\n};\n\nMoviesProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React, { useContext } from 'react';\nimport ButtonModel from '../atoms/Button';\nimport { MoviesContext } from '../../providers/MoviesProvider';\nimport { Container } from 'reactstrap';\n\nconst CardButtonsPanel = (props) => {\n  const { id, handleModal, likeIconMode } = props;\n  const context = useContext(MoviesContext);\n\n  return (\n    <Container className=\"position-absolute cardButtons\" id={id}>\n      <ButtonModel handleClick={handleModal} id=\"playMovie\" faIcon=\"play\" />\n      <ButtonModel\n        handleClick={context.toggleLike}\n        id=\"likeButton\"\n        faIcon={likeIconMode}\n      />\n      <ButtonModel\n        handleClick={context.deleteMovie}\n        id=\"removeMovie\"\n        faIcon={['fas', 'trash']}\n      ></ButtonModel>\n    </Container>\n  );\n};\n\nexport default CardButtonsPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardImg } from 'reactstrap';\n\nfunction Image({ ...props }) {\n  const { handleClick, url = '', alt = 'alternate text' } = props;\n  return (\n    <CardImg\n      onClick={handleClick}\n      top\n      width=\"100%\"\n      src={url}\n      alt={alt}\n      style={{ cursor: 'pointer' }}\n    />\n  );\n}\n\nImage.propTypes = {\n  handleClick: PropTypes.func,\n  url: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n};\n\nexport default Image;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nconst ModalTemplate = ({ isOpen, toggleVisibility, title, iframeUrl }) => {\n  const modalNode = document.getElementById('modal-container');\n\n  return ReactDOM.createPortal(\n    <Modal\n      isOpen={isOpen}\n      toggle={toggleVisibility}\n      className=\"modal-xl modal-dialog-centered\"\n      min-height=\"900px\"\n      modalTransition={{ timeout: 700 }}\n      backdropTransition={{ timeout: 1300 }}\n    >\n      {' '}\n      <ModalHeader toggle={toggleVisibility}>{title}</ModalHeader>\n      <ModalBody>\n        <div className=\"embed-responsive embed-responsive-16by9\">\n          <iframe\n            title={title}\n            src={iframeUrl}\n            width={'100%'}\n            height={'100%'}\n            allow=\"autoplay\"\n            allowFullScreen\n          ></iframe>\n        </div>\n      </ModalBody>\n    </Modal>,\n    modalNode\n  );\n};\n\nModalTemplate.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  toggleVisibility: PropTypes.func.isRequired,\n  title: PropTypes.string,\n};\n\nexport default ModalTemplate;\n","import { useState } from 'react';\nimport ModalTemplate from '../templates/ModalTemplate';\n\nconst useModalTemplate = (initialState = false) => {\n  const [isOpen, setIsOpen] = useState(initialState);\n\n  const handleModal = () => setIsOpen(!isOpen);\n\n  return [{ ModalTemplate, isOpen, handleModal }];\n};\n\nexport default useModalTemplate;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\n\nexport default library.add(fas, far);\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardText, CardBody, CardTitle } from 'reactstrap';\nimport CardButtonsPanel from '../molecules/CardButtonsPanel';\nimport Image from '../atoms/Image';\nimport useModalTemplate from '../../hooks/useModalTemplate';\nimport '../../style/fontawesome';\n\nfunction CardModel(props) {\n  const { thumbnails, id, title, date, views, likes, liked, iframeUrl } = props;\n  const [{ ModalTemplate, isOpen, handleModal }] = useModalTemplate();\n  const [likeIcon, unlikeIcon] = [\n    ['far', 'heart'],\n    ['fas', 'heart'],\n  ];\n  return (\n    <Card id={id} className=\"h-100\">\n      <div className=\"image-container position-relative\">\n        {' '}\n        <Image url={thumbnails.standard.url} handleClick={handleModal} />\n        <div class=\"image-onhover\">\n          <p>Play</p>\n        </div>\n      </div>\n\n      <CardBody className=\"h-100 position-relative\">\n        {isOpen ? (\n          <ModalTemplate\n            isOpen={isOpen}\n            toggleVisibility={handleModal}\n            title={title}\n            iframeUrl={iframeUrl}\n          />\n        ) : null}\n        <CardTitle tag=\"h5\">{title}</CardTitle>\n        <CardText>Added: {date}</CardText>\n        <CardText>Viev count: {views}</CardText>\n        <CardText>Like count: {likes}</CardText>\n        <CardButtonsPanel\n          id={id}\n          handleModal={handleModal}\n          likeIconMode={liked ? unlikeIcon : likeIcon}\n        />\n      </CardBody>\n    </Card>\n  );\n}\n\nCardModel.propTypes = {\n  thumbnails: PropTypes.object,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  views: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  likes: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default CardModel;\n","import React, { useContext } from 'react';\nimport ButtonModel from '../atoms/Button';\nimport { MoviesContext } from '../../providers/MoviesProvider';\nimport { Container } from 'reactstrap';\n\nconst ControlButtonsPanel = (props) => {\n  const { handleView, handleFiltering, btnValue, btnFilterValue } = props;\n  const context = useContext(MoviesContext);\n\n  return (\n    <Container\n      className=\"btn-group btn-group-sm d-flex\"\n      role=\"group\"\n      aria-label=\"...\"\n    >\n      <ButtonModel\n        handleClick={() => handleView()}\n        value={btnValue}\n        id=\"toggleView\"\n      />\n      <ButtonModel\n        handleClick={(e) => context.loadDemo(e)}\n        value=\"Show demo\"\n        id=\"loadDemo\"\n      />\n      <ButtonModel\n        handleClick={(e) => context.emptyList(e)}\n        value=\"Clear list\"\n        id=\"clearList\"\n      />\n      <ButtonModel\n        handleClick={() => context.sortByDate(true)}\n        value=\"Sort by oldest\"\n        id=\"sortByOldest\"\n      />\n      <ButtonModel\n        handleClick={() => context.sortByDate(false)}\n        value=\"Sort by newest\"\n        id=\"sortByNewest\"\n      />\n      <ButtonModel\n        handleClick={() => handleFiltering()}\n        value={btnFilterValue}\n        id=\"clearList\"\n      />\n    </Container>\n  );\n};\n\nexport default ControlButtonsPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Media } from 'reactstrap';\nimport useModalTemplate from '../../hooks/useModalTemplate';\nimport CardButtonsPanel from '../molecules/CardButtonsPanel';\n\nfunction MovieListElement(props) {\n  const { id, title, date, views, likes, thumbnails, liked, iframeUrl } = props;\n  const [{ ModalTemplate, isOpen, handleModal }] = useModalTemplate();\n  const [likeIcon, unlikeIcon] = [\n    ['far', 'heart'],\n    ['fas', 'heart'],\n  ];\n  return (\n    <Media id={id} className=\"position-relative w-100 mt-3\" tag=\"li\">\n      {isOpen ? (\n        <ModalTemplate\n          isOpen={isOpen}\n          toggleVisibility={handleModal}\n          title={title}\n          iframeUrl={iframeUrl}\n        />\n      ) : null}\n      <Media left href=\"#\" className=\"w-auto mr-5 d-flex\">\n        <div className=\"image-container position-relative ml-0\">\n          {' '}\n          <Media\n            object\n            src={thumbnails.standard.url}\n            alt=\"Generic placeholder image\"\n            onClick={handleModal}\n          />\n          <div class=\"image-onhover\">\n            <p>Play</p>\n          </div>\n        </div>\n      </Media>\n      <Media body className=\"mt-3\">\n        <Media heading className=\"w-75\">\n          {title}\n        </Media>\n        Date added: {date} / Views: {views} / Likes: {likes}\n        <CardButtonsPanel\n          id={id}\n          handleModal={handleModal}\n          likeIconMode={liked ? unlikeIcon : likeIcon}\n        />\n      </Media>\n    </Media>\n  );\n}\n\nMovieListElement.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  views: PropTypes.string.isRequired,\n  likes: PropTypes.string.isRequired,\n  liked: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n};\n\nexport default MovieListElement;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst ListPagination = ({ ...props }) => {\n  const { handleClick, itemsPerPage, totalItems } = props;\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <Pagination className=\"m-auto\" aria-label=\"Page navigation\">\n      <PaginationItem id=\"first\">\n        <PaginationLink onClick={() => handleClick(1)} first href=\"#\" />\n      </PaginationItem>\n      {pageNumbers.map((num) => (\n        <PaginationItem id={num}>\n          <PaginationLink onClick={() => handleClick(num)} href=\"#\">\n            {num}\n          </PaginationLink>\n        </PaginationItem>\n      ))}\n      <PaginationItem id=\"last\">\n        <PaginationLink\n          onClick={() => handleClick(pageNumbers.length)}\n          last\n          href=\"#\"\n        />\n      </PaginationItem>\n    </Pagination>\n  );\n};\n\nListPagination.propTypes = {\n  handleClick: PropTypes.func,\n  itemsPerPage: PropTypes.number,\n  totalItems: PropTypes.number,\n};\n\nexport default ListPagination;\n","import React, { useState, useEffect, useContext } from 'react';\nimport CardModel from '../molecules/CardModel';\nimport ControlButtonsPanel from '../molecules/ControlButtonsPanel';\nimport { MoviesContext } from '../../providers/MoviesProvider';\nimport { Container, Row, Col, List } from 'reactstrap';\nimport ListModel from '../molecules/ListModel';\nimport ListPagination from '../molecules/Pagination';\nimport ButtonModel from '../atoms/Button';\n\nconst buttonsNames = {\n  tiles: 'Display tiles',\n  list: 'Display list',\n  normal: 'Show all',\n  liked: 'Show liked',\n};\n\nfunction MovieList() {\n  const { tiles, list, normal, liked } = buttonsNames;\n  const [viewTiles, setViewTiles] = useState(true);\n  const [btnValue, setBtnValue] = useState('Change display');\n  const [btnFilterValue, setBtnFilterValue] = useState('Filter list');\n  const [filteredList, setFilteredList] = useState(false);\n  const [currPage, setCurrPage] = useState(1);\n  const [itemsPerPage] = useState(8);\n\n  const context = useContext(MoviesContext);\n  const [data, setData] = useState(context.getStoredMovies());\n\n  //get the exact number of items per page:\n  const totalItems = data && data.length;\n  const indexOfLastItem = currPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currItems = data && data.slice(indexOfFirstItem, indexOfLastItem);\n\n  useEffect(() => {\n    if (filteredList) {\n      setCurrPage(1);\n      setData(context.getFilteredMovies());\n      return;\n    }\n    setData(context.getStoredMovies());\n  }, [filteredList, context]);\n\n  useEffect(() => {\n    setBtnValue(viewTiles ? list : tiles);\n  }, [viewTiles]);\n\n  useEffect(() => {\n    setBtnFilterValue(filteredList ? normal : liked);\n  }, [filteredList]);\n\n  const handleView = () => {\n    setViewTiles(!viewTiles);\n  };\n\n  const paginate = (pageNumber) => {\n    setCurrPage(pageNumber);\n  };\n\n  const handleFiltering = () => {\n    setFilteredList(!filteredList);\n  };\n\n  const paginationComponent = (\n    <ListPagination\n      handleClick={paginate}\n      itemsPerPage={itemsPerPage}\n      totalItems={totalItems}\n    />\n  );\n\n  if (!data)\n    return (\n      <main className=\"container d-flex vh-100\" role=\"main\">\n        <div className=\"m-auto\">\n          <h5>No movies, add some to your list or load demo:</h5>\n          <ButtonModel\n            handleClick={(e) => context.loadDemo(e)}\n            value=\"Show demo\"\n            id=\"loadDemo\"\n          />\n        </div>\n      </main>\n    );\n  return (\n    <main\n      className=\"container-fluid d-flex flex-column py-5 px-0 mt-3 mx-0 w-100\"\n      role=\"main\"\n    >\n      <ControlButtonsPanel\n        handleView={handleView}\n        handleFiltering={handleFiltering}\n        btnValue={btnValue}\n        btnFilterValue={btnFilterValue}\n      />\n      {!viewTiles ? (\n        <Container>\n          <List type=\"unstyled\">\n            {currItems.map((movieData) => (\n              <ListModel\n                key={movieData.id}\n                id={movieData.id}\n                title={movieData.snippet.title}\n                date={movieData.addDate}\n                views={movieData.statistics.viewCount}\n                likes={movieData.statistics.likeCount}\n                thumbnails={movieData.snippet.thumbnails}\n                liked={movieData.isLiked}\n                iframeUrl={movieData.iframe}\n              />\n            ))}\n          </List>\n        </Container>\n      ) : (\n        <Container fluid=\"true\" className=\"px-4\">\n          <Row xs=\"1\" md=\"2\" lg=\"4\" xl=\"10\">\n            <>\n              {currItems.map((movieData) => (\n                <Col className=\"my-2 align-items-stretch\" key={movieData.id}>\n                  <CardModel\n                    id={movieData.id}\n                    title={movieData.snippet.title}\n                    date={movieData.addDate}\n                    views={movieData.statistics.viewCount}\n                    likes={movieData.statistics.likeCount}\n                    thumbnails={movieData.snippet.thumbnails}\n                    liked={movieData.isLiked}\n                    iframeUrl={movieData.iframe}\n                  />\n                </Col>\n              ))}\n            </>\n          </Row>\n        </Container>\n      )}\n      {totalItems > itemsPerPage ? paginationComponent : null}\n    </main>\n  );\n}\n\nexport default MovieList;\n","import React from 'react';\nimport MovieList from '../components/organisms/MoviesList';\n\nfunction ListOfMovies() {\n  return <MovieList />;\n}\n\nexport default ListOfMovies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'reactstrap';\n\nfunction FormInput({ ...props }) {\n  const {\n    name = '',\n    id = '',\n    type = 'text',\n    placeholder,\n    onchangeHandler,\n  } = props;\n\n  return (\n    <Input\n      name={name}\n      id={id}\n      type={type}\n      placeholder={placeholder}\n      onChange={(e) => onchangeHandler(e)}\n    />\n  );\n}\n\nFormInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  onchangeHandler: PropTypes.func,\n};\n\nexport default FormInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from 'reactstrap';\n\nfunction FormLabel({ ...props }) {\n  const { id = '', labelValue = '' } = props;\n  return (\n    <Label htmlFor={id} hidden>\n      {labelValue}\n    </Label>\n  );\n}\n\nFormLabel.propTypes = {\n  id: PropTypes.string.isRequired,\n  labelValue: PropTypes.string,\n};\n\nexport default FormLabel;\n","import React, { useState, useContext } from 'react';\nimport { Form, FormGroup, Spinner } from 'reactstrap';\nimport ButtonModel from '../atoms/Button';\nimport InputModel from '../atoms/Input';\nimport LabelModel from '../atoms/Label';\nimport { MoviesContext } from '../../providers/MoviesProvider';\n\nfunction AddForm() {\n  const [input, setInput] = useState('');\n  const context = useContext(MoviesContext);\n\n  const handleInput = (e) => {\n    e.preventDefault();\n    setInput(e.target.value);\n  };\n\n  return (\n    <main className=\"container d-flex vh-100\" role=\"main\">\n      {context.isError ? (\n        <div className=\"m-auto\">\n          <h2>Something went wrong, try again later</h2>\n          <button onClick={() => context.resetErrorAlert()}>close</button>\n        </div>\n      ) : (\n        <div className=\"m-auto\">\n          {context.isLoading ? (\n            <Spinner color=\"info\" />\n          ) : (\n            <Form inline onSubmit={(e) => context.getMovieData(e, input)}>\n              <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                <LabelModel\n                  id=\"url\"\n                  labelName=\"URL/ID\"\n                  labelValue={\"URL or video's id\"}\n                />\n                <InputModel\n                  name=\"movieURL\"\n                  id=\"url\"\n                  type=\"text\"\n                  placeholder=\"Type video url or id...\"\n                  value={input}\n                  onchangeHandler={handleInput}\n                />\n                <ButtonModel type=\"submit\" value=\"Get movie!\" id=\"getMovie\" />\n              </FormGroup>\n            </Form>\n          )}\n        </div>\n      )}\n    </main>\n  );\n}\n\nexport default AddForm;\n","import React from 'react';\nimport AddMovieForm from '../components/molecules/AddMovieForm';\n\nfunction MainView() {\n  return <AddMovieForm />;\n}\n\nexport default MainView;\n","import React from 'react';\nimport MainTemplate from '../templates/MainTemplate';\nimport ListOfMovies from './ListView';\nimport MainView from './MainView';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../style/index.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { MoviesProvider } from '../providers/MoviesProvider';\n\nconst App = () => {\n  return (\n    <Router>\n      <MoviesProvider>\n        <MainTemplate>\n          <Switch>\n            <Route path=\"/\" exact>\n              <MainView />\n            </Route>\n            <Route path=\"/movie-list\" exact>\n              <ListOfMovies />\n            </Route>\n          </Switch>\n        </MainTemplate>\n      </MoviesProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './views/Root';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}